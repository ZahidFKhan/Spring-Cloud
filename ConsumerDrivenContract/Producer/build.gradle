//buildscript {
//	ext {
//		springBootVersion = '3.1.2'
//		verifierVersion = '4.0.4'
//	}
//	repositories { mavenCentral() }
//	dependencies {
//		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//		classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:${verifierVersion}"
//	}
//}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.springframework.cloud.contract' version '4.1.2'
	id 'maven-publish'
}

group = 'com.zahid.contract'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	mavenLocal()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
	set('springCloudVersion', "2023.0.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('contractTest') {
	useJUnitPlatform()
}

tasks.named('test') {
	useJUnitPlatform()
}

contracts {
	// To have the same contract folder as Maven. In Gradle would default to
	// src/contractTest/resources/contracts
	contractsDslDir = file("src/test/resources/contracts")
//	packageWithBaseClasses = 'hello'
	baseClassMappings {
		baseClassForTests("com.zahid.contract.ConsumerDrivenContract.CDCBaseTest");
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact bootJar

			artifact verifierStubsJar

			// https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/273
			versionMapping {
				usage("java-api") {
					fromResolutionOf("runtimeClasspath")
				}
				usage("java-runtime") {
					fromResolutionResult({})
				}
			}
		}
	}
}


